package mursalin.companion.gobuddy.domain.use_case.project

import mursalin.companion.gobuddy.domain.model.Project
import mursalin.companion.gobuddy.domain.repository.ProjectRepository
import java.util.Date
import javax.inject.Inject

class AddProjectUseCase @Inject constructor(
    private val repository: ProjectRepository
) {
    suspend operator fun invoke(
        userId: String,
        title: String,
        description: String,
        startDate: Date,
        endDate: Date
    ): Result<Unit> {
        if (title.isBlank()) {
            return Result.failure(IllegalArgumentException("Project title cannot be empty."))
        }
        // Create a Project object from the input parameters
        val project = Project(
            id = "", // ID will be generated by the repository/database
            userId = userId,
            title = title,
            description = description,
            startDate = startDate,
            endDate = endDate,
            status = "Ongoing"
        )
        // Pass the single Project object to the repository
        return repository.addProject(project)
    }
}
